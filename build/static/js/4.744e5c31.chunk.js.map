{"version":3,"sources":["components/widgets/home-planned-items/components/HomePlannedItemsDisplay/HomePlannedItemsDisplay.jsx","components/widgets/home-planned-items/components/HomePlannedItemsDisplay/index.js","components/widgets/home-planned-items/components/HomePlannedItemsInfoProvider/HomePlannedItemsInfoProvider.jsx","components/widgets/home-planned-items/HomePlannedItems.jsx","components/widgets/home-planned-items/index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","m","header","textAlign","subHeader","color","palette","neutralTertiary","HomePlannedItemsDisplay","items","setItems","classes","useState","newItemVal","setNewItemVal","setType","item","type","a","AppraisalService","updateItem","result","prev","copy","map","i","id","checkboxChangeHandler","e","target","checked","addItem","content","createdDate","Date","modifiedDate","status","periodId","relatedItemId","addOrphan","concat","removeItem","deleteItem","filter","className","Stack","Text","block","variant","Separator","List","onRenderCell","horizontalAlign","verticalAlign","horizontal","Checkbox","name","onChange","Item","grow","CommandButton","iconProps","iconName","disabled","onClick","onSubmit","preventDefault","TextField","autoComplete","value","suffix","onRenderSuffix","default","HomePlannedItemsInfoProvider","useEffect","getOrphans","run","HomePlannedItems"],"mappings":"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","file":"static/js/4.744e5c31.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox,\n  CommandButton,\n  List,\n  makeStyles,\n  Separator,\n  Stack,\n  Text,\n  TextField,\n} from '@fluentui/react';\nimport AppraisalService from '../../../../../services/AppraisalService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing.m,\n  },\n  header: {\n    textAlign: 'center',\n  },\n  subHeader: {\n    textAlign: 'center',\n    color: theme.palette.neutralTertiary,\n  },\n}));\n\nconst HomePlannedItemsDisplay = ({ items, setItems }) => {\n  const classes = useStyles();\n  const [newItemVal, setNewItemVal] = useState('');\n\n  const handleInputChange = (e) => {\n    setNewItemVal(e.target.value);\n  };\n\n  const setType = async (item, type) => {\n    const result = await AppraisalService.updateItem({ ...item, type });\n    setItems((prev) => {\n      const copy = { ...item, type: result.type };\n      return prev.map((i) => (i.id === item.id ? copy : i));\n    });\n  };\n\n  const checkboxChangeHandler = (item) => (e) => {\n    if (e.target.checked) {\n      setType(item, 'Achieved');\n    } else {\n      setType(item, 'Planned');\n    }\n  };\n\n  const addItem = async (content) => {\n    if (content !== '') {\n      const item = {\n        content,\n        createdDate: new Date(),\n        modifiedDate: new Date(),\n        status: 'Active',\n        type: 'Planned',\n        periodId: null,\n        relatedItemId: null,\n      };\n      const result = await AppraisalService.addOrphan(item);\n      setItems((prev) => prev.concat(result));\n      setNewItemVal('');\n    }\n  };\n\n  const removeItem = async (item) => {\n    await AppraisalService.deleteItem(item.id);\n    setItems((prev) => prev.filter((i) => i.id !== item.id));\n  };\n\n  const renderCell = (item) => (\n    <Stack horizontalAlign=\"start\" verticalAlign=\"center\" horizontal>\n      <Checkbox\n        name={item.content}\n        checked={item.type === 'Achieved'}\n        onChange={checkboxChangeHandler(item)}\n      />\n      <Stack.Item grow={1}>\n        <Text variant=\"medium\">{item.content}</Text>\n      </Stack.Item>\n      <CommandButton\n        iconProps={{ iconName: 'ChromeClose' }}\n        disabled={item.relatedItemId !== null}\n        onClick={() => removeItem(item)}\n      />\n    </Stack>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Stack>\n        <Text block className={classes.header} variant=\"mediumPlus\">\n          Planned items\n        </Text>\n        <Text block className={classes.subHeader} variant=\"medium\">\n          Here you will see items planned over past periods\n        </Text>\n        <Separator />\n        <List items={items} onRenderCell={renderCell} />\n        <Separator />\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            addItem(newItemVal);\n          }}\n        >\n          <TextField\n            autoComplete=\"off\"\n            value={newItemVal}\n            onChange={handleInputChange}\n            suffix=\"Add\"\n            onRenderSuffix={({ suffix }) => (\n              <CommandButton\n                type=\"submit\"\n                default\n                iconProps={{ iconName: 'Add' }}\n              >\n                {suffix}\n              </CommandButton>\n            )}\n          />\n        </form>\n      </Stack>\n    </div>\n  );\n};\n\nHomePlannedItemsDisplay.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setItems: PropTypes.func.isRequired,\n};\n\nexport default HomePlannedItemsDisplay;\n","import HomePlannedItemsDisplay from './HomePlannedItemsDisplay';\n\nexport default HomePlannedItemsDisplay;\n","import { useEffect } from 'react';\nimport AppraisalService from '../../../../../services/AppraisalService';\n\nconst HomePlannedItemsInfoProvider = ({ setItems }) => {\n  useEffect(() => {\n    async function run() {\n      setItems(await AppraisalService.getOrphans('Planned,Achieved'));\n    }\n    run();\n  }, [setItems]);\n\n  return null;\n};\n\nexport default HomePlannedItemsInfoProvider;\n","import React, { useState } from 'react';\n\nimport HomePlannedItemsDisplay from './components/HomePlannedItemsDisplay';\nimport HomePlannedItemsInfoProvider from './components/HomePlannedItemsInfoProvider/HomePlannedItemsInfoProvider';\n\nconst HomePlannedItems = () => {\n  const [items, setItems] = useState([]);\n\n  return (\n    <>\n      <HomePlannedItemsInfoProvider setItems={setItems} />\n      <HomePlannedItemsDisplay items={items} setItems={setItems} />\n    </>\n  );\n};\n\nexport default HomePlannedItems;\n","import HomePlannedItems from './HomePlannedItems';\n\nexport default HomePlannedItems;\n"],"sourceRoot":""}